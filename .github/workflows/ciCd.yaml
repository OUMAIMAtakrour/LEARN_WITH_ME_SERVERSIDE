name: CI/CD Pipeline

on:
  push:
    branches: ['master', 'develop']
  pull_request:
    branches: ['master', 'develop']

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '23.x'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Lint Code
        run: npm run lint

      - name: Run Tests
        run: npm run test

      - name: Build Project
        run: npm run build

  docker-build-and-push:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop'

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/learn-with-me:${{ github.sha }}
            ${{ secrets.DOCKERHUB_USERNAME }}/learn-with-me:latest

  deploy:
    needs: docker-build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Deploy to Production Server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            # Pull the latest Docker image
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/learn-with-me:latest

            # Stop and remove existing container if it exists
            docker stop learn-with-me || true
            docker rm learn-with-me || true

            # Run new container
            docker run -d \
              --name learn-with-me \
              -p 3000:3000 \
              -e MONGO_URL=${{ secrets.MONGO_URL }} \
              -e JWT_SECRET=${{ secrets.JWT_SECRET }} \
              -e NODE_ENV=production \
              -e MINIO_ENDPOINT=${{ secrets.MINIO_ENDPOINT }} \
              -e MINIO_PORT=${{ secrets.MINIO_PORT }} \
              -e MINIO_ACCESS_KEY=${{ secrets.MINIO_ACCESS_KEY }} \
              -e MINIO_SECRET_KEY=${{ secrets.MINIO_SECRET_KEY }} \
              -e MINIO_BUCKET_NAME=${{ secrets.MINIO_BUCKET_NAME }} \
              ${{ secrets.DOCKERHUB_USERNAME }}/learn-with-me:latest

  # Optional: Notification job
  notify:
    needs: [build-and-test, docker-build-and-push, deploy]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Send Slack Notification
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
